[
  {
    "name" : "CodeSync",
    "githubLink" : "https://github.com/Paras0-7/codesync",
    "deployed": "https://code-sync-azwv.onrender.com/",
    "techstacks" : "JavaScript, React.js, Node.js, Express.js, WebSocket.io, Docker",
    "description" : [
      "Developed a collaborative coding platform using ReactJS for the front-end and NodeJS for the back-end, enabling real-time interaction among users.",
      "Implemented WebSocket for real-time communication, allowing multiple users to join coding rooms, share code, and collaborate seamlessly.",
      "Created a user-friendly interface that facilitates room creation and management, enhancing the overall user experience and engagement."
    ],
    "id":4
  },
  {
    "name": "Wild Oasis",
    "githubLink": "https://github.com/Paras0-7/wild-oasis",
    "deployed": "https://wild--oasis.vercel.app/",
    "techstacks": "JavaScript, React.js, Context API, React Query, Styled Components",
    "description": [
      "A react internal dashboard application for Hotel employees to check daily stats, bookings, and to check-in and checkout customers",
      "used Context-API to manage the global state .",
      "used React Router Query to manage the global remote state .",
      "used Styled Components for CSS ."
    ],
    "id": 3
  },
  {
    "name": "React Pizza App",
    "githubLink": "https://github.com/Paras0-7/react-pizza-app",
    "deployed": "https://react--pizza-app.vercel.app/",
    "techstacks": "JavaScript, React.js, Redux, Tailwind.css",
    "description": [
      "A react application that let's user add pizza to cart from menu and create an order.",
      "used React Routerâ€™s loader and action data API for loading remote data and handling form submissions.",
      "used Redux to manage the global state ."
    ],
    "id": 2
  },
  {
    "name": "Forkify",
    "githubLink": "https://github.com/Paras0-7/Forkify",
    "deployed": "https://forkify-web.netlify.app/",
    "techstacks": "HTML, CSS, JavaScript",
    "description": ["Forkify is a web application that uses an API to fetch recipes according to the dish name provided by the user and renders all the details to the user interface."],
    "id": 1
  }
]
